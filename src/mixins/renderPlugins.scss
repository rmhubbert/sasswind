@mixin renderPlugins($plugins) {
  $standard: map-get($plugins, "standard");

  @each $plugin in $standard {
    $pluginName: map-get($plugin, "name");
    $pluginStyles: map-get($plugin, "styles");
    $pluginSuffix: map-get($plugin, "suffix");

    @if (permittedCorePlugin($pluginName)) {
      @each $style in $pluginStyles {
        @each $selector, $properties in $style {
          .#{$selector + $pluginSuffix} {
            @each $property, $value in $properties {
              #{$property}: $value#{important()};
            }
          }
          @each $variant in getVariants($pluginName) {
            @if (validPseudoVariant($variant)) {
              $pre: $variant +
                escape(config("separator")) +
                escape(config("prefix"));
              .#{$pre}#{$selector}:#{$variant + $pluginSuffix} {
                @each $property, $value in $properties {
                  #{$property}: $value#{important()};
                }
              }
            }
          }
        }
      }
    }
  }

  $screens: map-get($plugins, "screens");

  @each $key, $value in $screens {
    @include responsive($key) using ($return) {
      @each $plugin in $value {
        $pluginName: map-get($plugin, "name");
        $pluginStyles: map-get($plugin, "styles");
        $pluginPrefix: map-get($plugin, "prefix");
        $pluginSuffix: map-get($plugin, "suffix");

        @if (permittedCorePlugin($pluginName)) {
          @each $style in $pluginStyles {
            $pre: map-get($return, "prefix") + escape(config("prefix"));
            @if ($pluginPrefix == false) {
              $pre: "";
            }
            @each $selector, $properties in $style {
              .#{$pre}#{$selector + $pluginSuffix} {
                @each $property, $value in $properties {
                  #{$property}: $value#{important()};
                }
              }

              @each $variant in getVariants($pluginName) {
                @if (validPseudoVariant($variant)) {
                  $pre: map-get($return, "prefix") +
                    $variant +
                    escape(config("separator")) +
                    escape(config("prefix"));
                  @if ($pluginPrefix == false) {
                    $pre: "";
                  }
                  .#{$pre}#{$selector}:#{$variant + $pluginSuffix} {
                    @each $property, $value in $properties {
                      #{$property}: $value#{important()};
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
