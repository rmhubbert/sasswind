$responsiveUtilities: [];

@each $plugin in $utilities {
  $pluginName: map-get($plugin, "name");
  $pluginStyles: map-get($plugin, "styles");

  @if (permittedCorePlugin($pluginName)) {
    @each $style in $pluginStyles {
      @each $selector, $properties in $style {
        .#{$selector} {
          @each $property, $value in $properties {
            #{$property}: $value#{important()};
          }
        }
        @each $variant in getVariants($pluginName) {
          @if ($variant != "responsive") {
            $pre: $variant +
              escape(config("separator")) +
              escape(config("prefix"));
            .#{$pre}#{$selector}:#{$variant} {
              @each $property, $value in $properties {
                #{$property}: $value#{important()};
              }
            }
          }
        }
      }
    }
    @if (hasVariant($pluginName, "responsive")) {
      $responsiveUtilities: append($responsiveUtilities, $plugin);
    }
  }
}

@include responsive using ($return) {
  @each $plugin in $responsiveUtilities {
    $pluginName: map-get($plugin, "name");
    $pluginStyles: map-get($plugin, "styles");

    @each $style in $pluginStyles {
      $pre: map-get($return, "prefix") + escape(config("prefix"));
      @each $selector, $properties in $style {
        .#{$pre}#{$selector} {
          @each $property, $value in $properties {
            #{$property}: $value#{important()};
          }
        }

        @each $variant in getVariants($pluginName) {
          @if ($variant != "responsive") {
            $pre: map-get($return, "prefix") +
              $variant +
              escape(config("separator")) +
              escape(config("prefix"));
            .#{$pre}#{$selector}:#{$variant} {
              @each $property, $value in $properties {
                #{$property}: $value#{important()};
              }
            }
          }
        }
      }
    }
  }
}
